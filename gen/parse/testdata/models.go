package mulgen

//Code generated by Mulbase. Do not edit but feel free to read comments.
import (
	"mulbase"
)

type Todo struct {
	//This line declares basic properties for a database node.
	mulbase.Node
	Text string `json:"todoText"`
	Done bool   `json:"todoDone"`
	User *User  `json:"todoUser"`
}

var TodoFields mulbase.FieldList = []mulbase.Field{mulbase.MakeField(""), mulbase.MakeField("todoText"), mulbase.MakeField("todoDone"), mulbase.MakeField("todoUser")}

type User struct {
	//This line declares basic properties for a database node.
	mulbase.Node
	Name string `json:"userName"`
}

var UserFields mulbase.FieldList = []mulbase.Field{mulbase.MakeField(""), mulbase.MakeField("userName")}

type Character struct {
	//This line declares basic properties for a database node.
	mulbase.Node
	Name      string     `json:"characterName"`
	AppearsIn []*Episode `json:"characterAppearsIn"`
}

var CharacterFields mulbase.FieldList = []mulbase.Field{mulbase.MakeField("characterName"), mulbase.MakeField("characterAppearsIn")}

type Episode struct {
	//This line declares basic properties for a database node.
	mulbase.Node
	Name string `json:"episodeName"`
}

var EpisodeFields mulbase.FieldList = []mulbase.Field{mulbase.MakeField("episodeName")}

type Query struct {
	//This line declares basic properties for a database node.
	mulbase.Node
	Todos []*Todo `json:"queryTodos"`
}

var QueryFields mulbase.FieldList = []mulbase.Field{mulbase.MakeField("queryTodos")}
